/**
* Generates XML for multiple tax ledgers.
* @param taxLedgers - Array of tax ledger names.
* @returns A string containing the combined XML for all the tax ledgers.
*/
export function createTaxLedgers(taxLedgers: string[]): string {
  let xmlOutput = "";

  taxLedgers.forEach((ledgerName, index) => {
    // Generate a pseudo-unique GUID for demonstration purposes.
    const guidSuffix = (252 + index).toString().padStart(4, "0");
    const guid = `bf911d27-633e-4ad7-ba7c-a871d6f9461e-${guidSuffix}`;

    // Set an alterID, for example purposes.
    const alterID = 1000 + index;

    // Determine the GST duty head based on the ledger name.
    let gstDutyHead = "";
    if (ledgerName.toLowerCase().startsWith("igst")) {
      gstDutyHead = "IGST";
    } else if (ledgerName.toLowerCase().startsWith("cgst")) {
      gstDutyHead = "CGST";
    } else if (ledgerName.toLowerCase().startsWith("ut/sgst")) {
      // For 'ut/sgst' ledgers, the GST duty head remains "CGST".
      gstDutyHead = "CGST";
    }

    // Determine the TAXTYPE: default is "GST" but for ut/sgst we override to "CGST".
    let taxType = "GST";
    if (ledgerName.toLowerCase().startsWith("ut/sgst")) {
      taxType = "CGST";
    }

    // Create the XML ledger definition.
    const xmlLedger = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
    <LEDGER NAME="${ledgerName}" RESERVEDNAME="">
      <OLDAUDITENTRYIDS.LIST TYPE="Number">
        <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
      </OLDAUDITENTRYIDS.LIST>
      <GUID>${guid}</GUID>
      <CURRENCYNAME>â‚¹</CURRENCYNAME>
      <PARENT>Duties &amp; Taxes</PARENT>
      <TAXCLASSIFICATIONNAME>&#4; Not Applicable</TAXCLASSIFICATIONNAME>
      <TAXTYPE>${taxType}</TAXTYPE>
      <GSTTYPE>&#4; Not Applicable</GSTTYPE>
      <APPROPRIATEFOR>&#4; Not Applicable</APPROPRIATEFOR>
      <GSTDUTYHEAD>${gstDutyHead}</GSTDUTYHEAD>
      <ROUNDINGMETHOD>&#4; Not Applicable</ROUNDINGMETHOD>
      <SERVICECATEGORY>&#4; Not Applicable</SERVICECATEGORY>
      <EXCISELEDGERCLASSIFICATION>&#4; Not Applicable</EXCISELEDGERCLASSIFICATION>
      <EXCISEDUTYTYPE>&#4; Not Applicable</EXCISEDUTYTYPE>
      <EXCISENATUREOFPURCHASE>&#4; Not Applicable</EXCISENATUREOFPURCHASE>
      <LEDGERFBTCATEGORY>&#4; Not Applicable</LEDGERFBTCATEGORY>
      <ISBILLWISEON>No</ISBILLWISEON>
      <ISCOSTCENTRESON>No</ISCOSTCENTRESON>
      <ISINTERESTON>No</ISINTERESTON>
      <ALLOWINMOBILE>No</ALLOWINMOBILE>
      <ISCOSTTRACKINGON>No</ISCOSTTRACKINGON>
      <ISBENEFICIARYCODEON>No</ISBENEFICIARYCODEON>
      <ISEXPORTONVCHCREATE>No</ISEXPORTONVCHCREATE>
      <PLASINCOMEEXPENSE>No</PLASINCOMEEXPENSE>
      <ISUPDATINGTARGETID>No</ISUPDATINGTARGETID>
      <ISDELETED>No</ISDELETED>
      <ISSECURITYONWHENENTERED>No</ISSECURITYONWHENENTERED>
      <ASORIGINAL>Yes</ASORIGINAL>
      <ISCONDENSED>No</ISCONDENSED>
      <AFFECTSSTOCK>No</AFFECTSSTOCK>
      <ISRATEINCLUSIVEVAT>No</ISRATEINCLUSIVEVAT>
      <FORPAYROLL>No</FORPAYROLL>
      <ISABCENABLED>No</ISABCENABLED>
      <ISCREDITDAYSCHKON>No</ISCREDITDAYSCHKON>
      <INTERESTONBILLWISE>No</INTERESTONBILLWISE>
      <OVERRIDEINTEREST>No</OVERRIDEINTEREST>
      <OVERRIDEADVINTEREST>No</OVERRIDEADVINTEREST>
      <USEFORVAT>No</USEFORVAT>
      <IGNORETDSEXEMPT>No</IGNORETDSEXEMPT>
      <ISTCSAPPLICABLE>No</ISTCSAPPLICABLE>
      <ISTDSAPPLICABLE>No</ISTDSAPPLICABLE>
      <ISFBTAPPLICABLE>No</ISFBTAPPLICABLE>
      <ISGSTAPPLICABLE>No</ISGSTAPPLICABLE>
      <ISEXCISEAPPLICABLE>No</ISEXCISEAPPLICABLE>
      <ISTDSEXPENSE>No</ISTDSEXPENSE>
      <ISEDLIAPPLICABLE>No</ISEDLIAPPLICABLE>
      <ISRELATEDPARTY>No</ISRELATEDPARTY>
      <USEFORESIELIGIBILITY>No</USEFORESIELIGIBILITY>
      <ISINTERESTINCLLASTDAY>No</ISINTERESTINCLLASTDAY>
      <APPROPRIATETAXVALUE>No</APPROPRIATETAXVALUE>
      <ISBEHAVEASDUTY>No</ISBEHAVEASDUTY>
      <INTERESTINCLDAYOFADDITION>No</INTERESTINCLDAYOFADDITION>
      <INTERESTINCLDAYOFDEDUCTION>No</INTERESTINCLDAYOFDEDUCTION>
      <ISOTHTERRITORYASSESSEE>No</ISOTHTERRITORYASSESSEE>
      <IGNOREMISMATCHWITHWARNING>No</IGNOREMISMATCHWITHWARNING>
      <USEASNOTIONALBANK>No</USEASNOTIONALBANK>
      <BEHAVEASPAYMENTGATEWAY>No</BEHAVEASPAYMENTGATEWAY>
      <OVERRIDECREDITLIMIT>No</OVERRIDECREDITLIMIT>
      <ISAGAINSTFORMC>No</ISAGAINSTFORMC>
      <ISCHEQUEPRINTINGENABLED>Yes</ISCHEQUEPRINTINGENABLED>
      <ISPAYUPLOAD>No</ISPAYUPLOAD>
      <ISPAYBATCHONLYSAL>No</ISPAYBATCHONLYSAL>
      <ISBNFCODESUPPORTED>No</ISBNFCODESUPPORTED>
      <ALLOWEXPORTWITHERRORS>No</ALLOWEXPORTWITHERRORS>
      <CONSIDERPURCHASEFOREXPORT>No</CONSIDERPURCHASEFOREXPORT>
      <ISTRANSPORTER>No</ISTRANSPORTER>
      <ISECASHLEDGER>No</ISECASHLEDGER>
      <USEFORNOTIONALITC>No</USEFORNOTIONALITC>
      <ISECOMMOPERATOR>No</ISECOMMOPERATOR>
      <OVERRIDEBASEDONREALIZATION>No</OVERRIDEBASEDONREALIZATION>
      <ISECDIFFINSDATE>No</ISECDIFFINSDATE>
      <SHOWINPAYSLIP>No</SHOWINPAYSLIP>
      <USEFORGRATUITY>No</USEFORGRATUITY>
      <ISTDSPROJECTED>No</ISTDSPROJECTED>
      <ISSALARYMULFILE>No</ISSALARYMULFILE>
      <FORSERVICETAX>No</FORSERVICETAX>
      <ISINPUTCREDIT>No</ISINPUTCREDIT>
      <ISEXEMPTED>No</ISEXEMPTED>
      <ISABATEMENTAPPLICABLE>No</ISABATEMENTAPPLICABLE>
      <ISSTXPARTY>No</ISSTXPARTY>
      <ISSTXNONREALIZEDTYPE>No</ISSTXNONREALIZEDTYPE>
      <USEFORKKC>No</USEFORKKC>
      <USEFORSBC>No</USEFORSBC>
      <ISUSEDFORCVD>No</ISUSEDFORCVD>
      <LEDBELONGSTONONTAXABLE>No</LEDBELONGSTONONTAXABLE>
      <ISEXCISEMERCHANTEXPORTER>No</ISEXCISEMERCHANTEXPORTER>
      <ISPARTYEXEMPTED>No</ISPARTYEXEMPTED>
      <ISSEZPARTY>No</ISSEZPARTY>
      <TDSDEDUCTEEISSPECIALRATE>No</TDSDEDUCTEEISSPECIALRATE>
      <ISECHEQUESUPPORTED>No</ISECHEQUESUPPORTED>
      <ISEDDSUPPORTED>No</ISEDDSUPPORTED>
      <HASECHEQUEDELIVERYMODE>No</HASECHEQUEDELIVERYMODE>
      <HASECHEQUEDELIVERYTO>No</HASECHEQUEDELIVERYTO>
      <HASECHEQUEPRINTLOCATION>No</HASECHEQUEPRINTLOCATION>
      <HASECHEQUEPAYABLELOCATION>No</HASECHEQUEPAYABLELOCATION>
      <HASECHEQUEBANKLOCATION>No</HASECHEQUEBANKLOCATION>
      <HASEDDDELIVERYMODE>No</HASEDDDELIVERYMODE>
      <HASEDDDELIVERYTO>No</HASEDDDELIVERYTO>
      <HASEDDPRINTLOCATION>No</HASEDDPRINTLOCATION>
      <HASEDDPAYABLELOCATION>No</HASEDDPAYABLELOCATION>
      <HASEDDBANKLOCATION>No</HASEDDBANKLOCATION>
      <ISEBANKINGENABLED>No</ISEBANKINGENABLED>
      <ISEXPORTFILEENCRYPTED>No</ISEXPORTFILEENCRYPTED>
      <ISBATCHENABLED>No</ISBATCHENABLED>
      <ISPRODUCTCODEBASED>No</ISPRODUCTCODEBASED>
      <HASEDDCITY>No</HASEDDCITY>
      <HASECHEQUECITY>No</HASECHEQUECITY>
      <ISFILENAMEFORMATSUPPORTED>No</ISFILENAMEFORMATSUPPORTED>
      <HASCLIENTCODE>No</HASCLIENTCODE>
      <PAYINSISBATCHAPPLICABLE>No</PAYINSISBATCHAPPLICABLE>
      <PAYINSISFILENUMAPP>No</PAYINSISFILENUMAPP>
      <ISSALARYTRANSGROUPEDFORBRS>No</ISSALARYTRANSGROUPEDFORBRS>
      <ISEBANKINGSUPPORTED>No</ISEBANKINGSUPPORTED>
      <ISSCBUAE>No</ISSCBUAE>
      <ISBANKSTATUSAPP>No</ISBANKSTATUSAPP>
      <ISSALARYGROUPED>No</ISSALARYGROUPED>
      <USEFORPURCHASETAX>No</USEFORPURCHASETAX>
      <AUDITED>No</AUDITED>
      <SORTPOSITION> 1000</SORTPOSITION>
      <ALTERID>${alterID}</ALTERID>
      <SERVICETAXDETAILS.LIST>      </SERVICETAXDETAILS.LIST>
      <LBTREGNDETAILS.LIST>      </LBTREGNDETAILS.LIST>
      <VATDETAILS.LIST>      </VATDETAILS.LIST>
      <SALESTAXCESSDETAILS.LIST>      </SALESTAXCESSDETAILS.LIST>
      <GSTDETAILS.LIST>      </GSTDETAILS.LIST>
      <HSNDETAILS.LIST>      </HSNDETAILS.LIST>
      <MSMEREGISTRATIONDETAILS.LIST>      </MSMEREGISTRATIONDETAILS.LIST>
      <LANGUAGENAME.LIST>
        <NAME.LIST TYPE="String">
          <NAME>${ledgerName}</NAME>
        </NAME.LIST>
        <LANGUAGEID> 1033</LANGUAGEID>
      </LANGUAGENAME.LIST>
      <XBRLDETAIL.LIST>      </XBRLDETAIL.LIST>
      <AUDITDETAILS.LIST>      </AUDITDETAILS.LIST>
      <SCHVIDETAILS.LIST>      </SCHVIDETAILS.LIST>
      <EXCISETARIFFDETAILS.LIST>      </EXCISETARIFFDETAILS.LIST>
      <TCSCATEGORYDETAILS.LIST>      </TCSCATEGORYDETAILS.LIST>
      <TDSCATEGORYDETAILS.LIST>      </TDSCATEGORYDETAILS.LIST>
      <SLABPERIOD.LIST>      </SLABPERIOD.LIST>
      <GRATUITYPERIOD.LIST>      </GRATUITYPERIOD.LIST>
      <ADDITIONALCOMPUTATIONS.LIST>      </ADDITIONALCOMPUTATIONS.LIST>
      <EXCISEJURISDICTIONDETAILS.LIST>      </EXCISEJURISDICTIONDETAILS.LIST>
      <EXCLUDEDTAXATIONS.LIST>      </EXCLUDEDTAXATIONS.LIST>
      <BANKALLOCATIONS.LIST>      </BANKALLOCATIONS.LIST>
      <PAYMENTDETAILS.LIST>      </PAYMENTDETAILS.LIST>
      <BANKEXPORTFORMATS.LIST>      </BANKEXPORTFORMATS.LIST>
      <BILLALLOCATIONS.LIST>      </BILLALLOCATIONS.LIST>
      <INTERESTCOLLECTION.LIST>      </INTERESTCOLLECTION.LIST>
      <LEDGERCLOSINGVALUES.LIST>      </LEDGERCLOSINGVALUES.LIST>
      <LEDGERAUDITCLASS.LIST>      </LEDGERAUDITCLASS.LIST>
      <OLDAUDITENTRIES.LIST>      </OLDAUDITENTRIES.LIST>
      <TDSEXEMPTIONRULES.LIST>      </TDSEXEMPTIONRULES.LIST>
      <DEDUCTINSAMEVCHRULES.LIST>      </DEDUCTINSAMEVCHRULES.LIST>
      <LOWERDEDUCTION.LIST>      </LOWERDEDUCTION.LIST>
      <STXABATEMENTDETAILS.LIST>      </STXABATEMENTDETAILS.LIST>
      <LEDMULTIADDRESSLIST.LIST>      </LEDMULTIADDRESSLIST.LIST>
      <STXTAXDETAILS.LIST>      </STXTAXDETAILS.LIST>
      <CHEQUERANGE.LIST>      </CHEQUERANGE.LIST>
      <DEFAULTVCHCHEQUEDETAILS.LIST>      </DEFAULTVCHCHEQUEDETAILS.LIST>
      <ACCOUNTAUDITENTRIES.LIST>      </ACCOUNTAUDITENTRIES.LIST>
      <AUDITENTRIES.LIST>      </AUDITENTRIES.LIST>
      <BRSIMPORTEDINFO.LIST>      </BRSIMPORTEDINFO.LIST>
      <AUTOBRSCONFIGS.LIST>      </AUTOBRSCONFIGS.LIST>
      <BANKURENTRIES.LIST>      </BANKURENTRIES.LIST>
      <DEFAULTCHEQUEDETAILS.LIST>      </DEFAULTCHEQUEDETAILS.LIST>
      <DEFAULTOPENINGCHEQUEDETAILS.LIST>      </DEFAULTOPENINGCHEQUEDETAILS.LIST>
      <CANCELLEDPAYALLOCATIONS.LIST>      </CANCELLEDPAYALLOCATIONS.LIST>
      <ECHEQUEPRINTLOCATION.LIST>      </ECHEQUEPRINTLOCATION.LIST>
      <ECHEQUEPAYABLELOCATION.LIST>      </ECHEQUEPAYABLELOCATION.LIST>
      <EDDPRINTLOCATION.LIST>      </EDDPRINTLOCATION.LIST>
      <EDDPAYABLELOCATION.LIST>      </EDDPAYABLELOCATION.LIST>
      <AVAILABLETRANSACTIONTYPES.LIST>      </AVAILABLETRANSACTIONTYPES.LIST>
      <LEDPAYINSCONFIGS.LIST>      </LEDPAYINSCONFIGS.LIST>
      <TYPECODEDETAILS.LIST>      </TYPECODEDETAILS.LIST>
      <FIELDVALIDATIONDETAILS.LIST>      </FIELDVALIDATIONDETAILS.LIST>
      <INPUTCRALLOCS.LIST>      </INPUTCRALLOCS.LIST>
      <TCSMETHODOFCALCULATION.LIST>      </TCSMETHODOFCALCULATION.LIST>
      <LEDGSTREGDETAILS.LIST>      </LEDGSTREGDETAILS.LIST>
      <LEDMAILINGDETAILS.LIST>      </LEDMAILINGDETAILS.LIST>
      <GSTRECONPREFIXSUFFIXDETAILS.LIST>      </GSTRECONPREFIXSUFFIXDETAILS.LIST>
      <CONTACTDETAILS.LIST>
        <NAME>Primary Mobile No.</NAME>
        <ISDEFAULTWHATSAPPNUM>Yes</ISDEFAULTWHATSAPPNUM>
      </CONTACTDETAILS.LIST>
      <GSTCLASSFNIGSTRATES.LIST>      </GSTCLASSFNIGSTRATES.LIST>
      <EXTARIFFDUTYHEADDETAILS.LIST>      </EXTARIFFDUTYHEADDETAILS.LIST>
      <TEMPGSTITEMSLABRATES.LIST>      </TEMPGSTITEMSLABRATES.LIST>
      <LEDGSTADDRESS.LIST>      </LEDGSTADDRESS.LIST>
      <VOUCHERTYPEPRODUCTCODES.LIST>      </VOUCHERTYPEPRODUCTCODES.LIST>
      <LEDADDRESS.LIST>      </LEDADDRESS.LIST>
      <DEFMULTIPLETOPHONENO.LIST>      </DEFMULTIPLETOPHONENO.LIST>
    </LEDGER>
  </TALLYMESSAGE>`;

    xmlOutput += xmlLedger + "\n";
  });

  return xmlOutput;
}


/**
* Generates a Party Ledger XML message.
*
* @param name - The name for the party ledger.
* @param gst - The GST number for the party ledger.
* @returns The generated XML string.
* @throws Error if either name or gst is not provided.
*/
export function createPartyLedgerXml(name: string, gst: string): string {
  if (!name || !gst) {
    throw new Error('Both "name" and "gst" fields are required.');
  }

  // Generate a pseudo-unique GUID by appending a random hexadecimal integer.
  const randomSuffix = Math.floor(Math.random() * 10000).toString(16);
  const guid = `bf911d27-633e-4ad7-ba7c-a871d6f9461e-${randomSuffix}`;

  // Construct the XML using a template literal.
  const xml = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
      <LEDGER NAME="${name}" RESERVEDNAME="">
        <OLDAUDITENTRYIDS.LIST TYPE="Number">
          <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
        </OLDAUDITENTRYIDS.LIST>
        <GUID>${guid}</GUID>
        <CURRENCYNAME>â‚¹</CURRENCYNAME>
        <PRIORSTATENAME>&#4; Not Applicable</PRIORSTATENAME>
        <VATDEALERTYPE>Regular</VATDEALERTYPE>
        <PARENT>Sundry Creditors</PARENT>
        <TAXCLASSIFICATIONNAME>&#4; Not Applicable</TAXCLASSIFICATIONNAME>
        <TAXTYPE>Others</TAXTYPE>
        <COUNTRYOFRESIDENCE>India</COUNTRYOFRESIDENCE>
        <LEDGERCOUNTRYISDCODE>+91</LEDGERCOUNTRYISDCODE>
        <GSTTYPE>&#4; Not Applicable</GSTTYPE>
        <APPROPRIATEFOR>&#4; Not Applicable</APPROPRIATEFOR>
        <GSTNATUREOFSUPPLY>&#4; Not Applicable</GSTNATUREOFSUPPLY>
        <SERVICECATEGORY>&#4; Not Applicable</SERVICECATEGORY>
        <EXCISELEDGERCLASSIFICATION>&#4; Not Applicable</EXCISELEDGERCLASSIFICATION>
        <EXCISEDUTYTYPE>&#4; Not Applicable</EXCISEDUTYTYPE>
        <EXCISENATUREOFPURCHASE>&#4; Not Applicable</EXCISENATUREOFPURCHASE>
        <LEDGERFBTCATEGORY>&#4; Not Applicable</LEDGERFBTCATEGORY>
        <ISBILLWISEON>Yes</ISBILLWISEON>
        <ISCOSTCENTRESON>No</ISCOSTCENTRESON>
        <ISINTERESTON>No</ISINTERESTON>
        <ALLOWINMOBILE>No</ALLOWINMOBILE>
        <ISCOSTTRACKINGON>No</ISCOSTTRACKINGON>
        <ISBENEFICIARYCODEON>No</ISBENEFICIARYCODEON>
        <ISEXPORTONVCHCREATE>No</ISEXPORTONVCHCREATE>
        <PLASINCOMEEXPENSE>No</PLASINCOMEEXPENSE>
        <ISUPDATINGTARGETID>No</ISUPDATINGTARGETID>
        <ISDELETED>No</ISDELETED>
        <ISSECURITYONWHENENTERED>No</ISSECURITYONWHENENTERED>
        <ASORIGINAL>Yes</ASORIGINAL>
        <ISCONDENSED>No</ISCONDENSED>
        <AFFECTSSTOCK>No</AFFECTSSTOCK>
        <ISRATEINCLUSIVEVAT>No</ISRATEINCLUSIVEVAT>
        <FORPAYROLL>No</FORPAYROLL>
        <ISABCENABLED>No</ISABCENABLED>
        <ISCREDITDAYSCHKON>No</ISCREDITDAYSCHKON>
        <INTERESTONBILLWISE>No</INTERESTONBILLWISE>
        <OVERRIDEINTEREST>No</OVERRIDEINTEREST>
        <OVERRIDEADVINTEREST>No</OVERRIDEADVINTEREST>
        <USEFORVAT>No</USEFORVAT>
        <IGNORETDSEXEMPT>No</IGNORETDSEXEMPT>
        <ISTCSAPPLICABLE>No</ISTCSAPPLICABLE>
        <ISTDSAPPLICABLE>No</ISTDSAPPLICABLE>
        <ISFBTAPPLICABLE>No</ISFBTAPPLICABLE>
        <ISGSTAPPLICABLE>No</ISGSTAPPLICABLE>
        <ISEXCISEAPPLICABLE>No</ISEXCISEAPPLICABLE>
        <ISTDSEXPENSE>No</ISTDSEXPENSE>
        <ISEDLIAPPLICABLE>No</ISEDLIAPPLICABLE>
        <ISRELATEDPARTY>No</ISRELATEDPARTY>
        <USEFORESIELIGIBILITY>No</USEFORESIELIGIBILITY>
        <ISINTERESTINCLLASTDAY>No</ISINTERESTINCLLASTDAY>
        <APPROPRIATETAXVALUE>No</APPROPRIATETAXVALUE>
        <ISBEHAVEASDUTY>No</ISBEHAVEASDUTY>
        <INTERESTINCLDAYOFADDITION>No</INTERESTINCLDAYOFADDITION>
        <INTERESTINCLDAYOFDEDUCTION>No</INTERESTINCLDAYOFDEDUCTION>
        <ISOTHTERRITORYASSESSEE>No</ISOTHTERRITORYASSESSEE>
        <IGNOREMISMATCHWITHWARNING>No</IGNOREMISMATCHWITHWARNING>
        <USEASNOTIONALBANK>No</USEASNOTIONALBANK>
        <BEHAVEASPAYMENTGATEWAY>No</BEHAVEASPAYMENTGATEWAY>
        <OVERRIDECREDITLIMIT>No</OVERRIDECREDITLIMIT>
        <ISAGAINSTFORMC>No</ISAGAINSTFORMC>
        <ISCHEQUEPRINTINGENABLED>Yes</ISCHEQUEPRINTINGENABLED>
        <ISPAYUPLOAD>No</ISPAYUPLOAD>
        <ISPAYBATCHONLYSAL>No</ISPAYBATCHONLYSAL>
        <ISBNFCODESUPPORTED>No</ISBNFCODESUPPORTED>
        <ALLOWEXPORTWITHERRORS>No</ALLOWEXPORTWITHERRORS>
        <CONSIDERPURCHASEFOREXPORT>No</CONSIDERPURCHASEFOREXPORT>
        <ISTRANSPORTER>No</ISTRANSPORTER>
        <ISECASHLEDGER>No</ISECASHLEDGER>
        <USEFORNOTIONALITC>No</USEFORNOTIONALITC>
        <ISECOMMOPERATOR>No</ISECOMMOPERATOR>
        <OVERRIDEBASEDONREALIZATION>No</OVERRIDEBASEDONREALIZATION>
        <ISECDIFFINSDATE>No</ISECDIFFINSDATE>
        <SHOWINPAYSLIP>No</SHOWINPAYSLIP>
        <USEFORGRATUITY>No</USEFORGRATUITY>
        <ISTDSPROJECTED>No</ISTDSPROJECTED>
        <ISSALARYMULFILE>No</ISSALARYMULFILE>
        <FORSERVICETAX>No</FORSERVICETAX>
        <ISINPUTCREDIT>No</ISINPUTCREDIT>
        <ISEXEMPTED>No</ISEXEMPTED>
        <ISABATEMENTAPPLICABLE>No</ISABATEMENTAPPLICABLE>
        <ISSTXPARTY>No</ISSTXPARTY>
        <ISSTXNONREALIZEDTYPE>No</ISSTXNONREALIZEDTYPE>
        <USEFORKKC>No</USEFORKKC>
        <USEFORSBC>No</USEFORSBC>
        <ISUSEDFORCVD>No</ISUSEDFORCVD>
        <LEDBELONGSTONONTAXABLE>No</LEDBELONGSTONONTAXABLE>
        <ISEXCISEMERCHANTEXPORTER>No</ISEXCISEMERCHANTEXPORTER>
        <ISPARTYEXEMPTED>No</ISPARTYEXEMPTED>
        <ISSEZPARTY>No</ISSEZPARTY>
        <TDSDEDUCTEEISSPECIALRATE>No</TDSDEDUCTEEISSPECIALRATE>
        <ISECHEQUESUPPORTED>No</ISECHEQUESUPPORTED>
        <ISEDDSUPPORTED>No</ISEDDSUPPORTED>
        <HASECHEQUEDELIVERYMODE>No</HASECHEQUEDELIVERYMODE>
        <HASECHEQUEDELIVERYTO>No</HASECHEQUEDELIVERYTO>
        <HASECHEQUEPRINTLOCATION>No</HASECHEQUEPRINTLOCATION>
        <HASECHEQUEPAYABLELOCATION>No</HASECHEQUEPAYABLELOCATION>
        <HASECHEQUEBANKLOCATION>No</HASECHEQUEBANKLOCATION>
        <HASEDDDELIVERYMODE>No</HASEDDDELIVERYMODE>
        <HASEDDDELIVERYTO>No</HASEDDDELIVERYTO>
        <HASEDDPRINTLOCATION>No</HASEDDPRINTLOCATION>
        <HASEDDPAYABLELOCATION>No</HASEDDPAYABLELOCATION>
        <HASEDDBANKLOCATION>No</HASEDDBANKLOCATION>
        <ISEBANKINGENABLED>No</ISEBANKINGENABLED>
        <ISEXPORTFILEENCRYPTED>No</ISEXPORTFILEENCRYPTED>
        <ISBATCHENABLED>No</ISBATCHENABLED>
        <ISPRODUCTCODEBASED>No</ISPRODUCTCODEBASED>
        <HASEDDCITY>No</HASEDDCITY>
        <HASECHEQUECITY>No</HASECHEQUECITY>
        <ISFILENAMEFORMATSUPPORTED>No</ISFILENAMEFORMATSUPPORTED>
        <HASCLIENTCODE>No</HASCLIENTCODE>
        <PAYINSISBATCHAPPLICABLE>No</PAYINSISBATCHAPPLICABLE>
        <PAYINSISFILENUMAPP>No</PAYINSISFILENUMAPP>
        <ISSALARYTRANSGROUPEDFORBRS>No</ISSALARYTRANSGROUPEDFORBRS>
        <ISEBANKINGSUPPORTED>No</ISEBANKINGSUPPORTED>
        <ISSCBUAE>No</ISSCBUAE>
        <ISBANKSTATUSAPP>No</ISBANKSTATUSAPP>
        <ISSALARYGROUPED>No</ISSALARYGROUPED>
        <USEFORPURCHASETAX>No</USEFORPURCHASETAX>
        <AUDITED>No</AUDITED>
        <SORTPOSITION> 1000</SORTPOSITION>
        <ALTERID> 1441</ALTERID>
        <SERVICETAXDETAILS.LIST>      </SERVICETAXDETAILS.LIST>
        <LBTREGNDETAILS.LIST>      </LBTREGNDETAILS.LIST>
        <VATDETAILS.LIST>      </VATDETAILS.LIST>
        <SALESTAXCESSDETAILS.LIST>      </SALESTAXCESSDETAILS.LIST>
        <GSTDETAILS.LIST>      </GSTDETAILS.LIST>
        <HSNDETAILS.LIST>      </HSNDETAILS.LIST>
        <MSMEREGISTRATIONDETAILS.LIST>      </MSMEREGISTRATIONDETAILS.LIST>
        <LANGUAGENAME.LIST>
          <NAME.LIST TYPE="String">
            <NAME>${name}</NAME>
          </NAME.LIST>
          <LANGUAGEID> 1033</LANGUAGEID>
        </LANGUAGENAME.LIST>
        <XBRLDETAIL.LIST>      </XBRLDETAIL.LIST>
        <AUDITDETAILS.LIST>      </AUDITDETAILS.LIST>
        <SCHVIDETAILS.LIST>      </SCHVIDETAILS.LIST>
        <EXCISETARIFFDETAILS.LIST>      </EXCISETARIFFDETAILS.LIST>
        <TCSCATEGORYDETAILS.LIST>      </TCSCATEGORYDETAILS.LIST>
        <TDSCATEGORYDETAILS.LIST>      </TDSCATEGORYDETAILS.LIST>
        <SLABPERIOD.LIST>      </SLABPERIOD.LIST>
        <GRATUITYPERIOD.LIST>      </GRATUITYPERIOD.LIST>
        <ADDITIONALCOMPUTATIONS.LIST>      </ADDITIONALCOMPUTATIONS.LIST>
        <EXCISEJURISDICTIONDETAILS.LIST>      </EXCISEJURISDICTIONDETAILS.LIST>
        <EXCLUDEDTAXATIONS.LIST>      </EXCLUDEDTAXATIONS.LIST>
        <BANKALLOCATIONS.LIST>      </BANKALLOCATIONS.LIST>
        <PAYMENTDETAILS.LIST>      </PAYMENTDETAILS.LIST>
        <BANKEXPORTFORMATS.LIST>      </BANKEXPORTFORMATS.LIST>
        <BILLALLOCATIONS.LIST>      </BILLALLOCATIONS.LIST>
        <INTERESTCOLLECTION.LIST>      </INTERESTCOLLECTION.LIST>
        <LEDGERCLOSINGVALUES.LIST>      </LEDGERCLOSINGVALUES.LIST>
        <LEDGERAUDITCLASS.LIST>      </LEDGERAUDITCLASS.LIST>
        <OLDAUDITENTRIES.LIST>      </OLDAUDITENTRIES.LIST>
        <TDSEXEMPTIONRULES.LIST>      </TDSEXEMPTIONRULES.LIST>
        <DEDUCTINSAMEVCHRULES.LIST>      </DEDUCTINSAMEVCHRULES.LIST>
        <LOWERDEDUCTION.LIST>      </LOWERDEDUCTION.LIST>
        <STXABATEMENTDETAILS.LIST>      </STXABATEMENTDETAILS.LIST>
        <LEDMULTIADDRESSLIST.LIST>      </LEDMULTIADDRESSLIST.LIST>
        <STXTAXDETAILS.LIST>      </STXTAXDETAILS.LIST>
        <CHEQUERANGE.LIST>      </CHEQUERANGE.LIST>
        <DEFAULTVCHCHEQUEDETAILS.LIST>      </DEFAULTVCHCHEQUEDETAILS.LIST>
        <ACCOUNTAUDITENTRIES.LIST>      </ACCOUNTAUDITENTRIES.LIST>
        <AUDITENTRIES.LIST>      </AUDITENTRIES.LIST>
        <BRSIMPORTEDINFO.LIST>      </BRSIMPORTEDINFO.LIST>
        <AUTOBRSCONFIGS.LIST>      </AUTOBRSCONFIGS.LIST>
        <BANKURENTRIES.LIST>      </BANKURENTRIES.LIST>
        <DEFAULTCHEQUEDETAILS.LIST>      </DEFAULTCHEQUEDETAILS.LIST>
        <DEFAULTOPENINGCHEQUEDETAILS.LIST>      </DEFAULTOPENINGCHEQUEDETAILS.LIST>
        <CANCELLEDPAYALLOCATIONS.LIST>      </CANCELLEDPAYALLOCATIONS.LIST>
        <ECHEQUEPRINTLOCATION.LIST>      </ECHEQUEPRINTLOCATION.LIST>
        <ECHEQUEPAYABLELOCATION.LIST>      </ECHEQUEPAYABLELOCATION.LIST>
        <EDDPRINTLOCATION.LIST>      </EDDPRINTLOCATION.LIST>
        <EDDPAYABLELOCATION.LIST>      </EDDPAYABLELOCATION.LIST>
        <AVAILABLETRANSACTIONTYPES.LIST>      </AVAILABLETRANSACTIONTYPES.LIST>
        <LEDPAYINSCONFIGS.LIST>      </LEDPAYINSCONFIGS.LIST>
        <TYPECODEDETAILS.LIST>      </TYPECODEDETAILS.LIST>
        <FIELDVALIDATIONDETAILS.LIST>      </FIELDVALIDATIONDETAILS.LIST>
        <INPUTCRALLOCS.LIST>      </INPUTCRALLOCS.LIST>
        <TCSMETHODOFCALCULATION.LIST>      </TCSMETHODOFCALCULATION.LIST>
        <LEDGSTREGDETAILS.LIST>
          <APPLICABLEFROM>20250401</APPLICABLEFROM>
          <GSTREGISTRATIONTYPE>Regular</GSTREGISTRATIONTYPE>
          <GSTIN>${gst}</GSTIN>
          <ISOTHTERRITORYASSESSEE>No</ISOTHTERRITORYASSESSEE>
          <CONSIDERPURCHASEFOREXPORT>No</CONSIDERPURCHASEFOREXPORT>
          <ISTRANSPORTER>No</ISTRANSPORTER>
          <ISCOMMONPARTY>No</ISCOMMONPARTY>
        </LEDGSTREGDETAILS.LIST>
        <LEDMAILINGDETAILS.LIST>
          <APPLICABLEFROM>20250401</APPLICABLEFROM>
          <MAILINGNAME>${name}</MAILINGNAME>
          <COUNTRY>India</COUNTRY>
        </LEDMAILINGDETAILS.LIST>
        <GSTRECONPREFIXSUFFIXDETAILS.LIST>      </GSTRECONPREFIXSUFFIXDETAILS.LIST>
        <CONTACTDETAILS.LIST>
          <NAME>Primary Mobile No.</NAME>
          <COUNTRYISDCODE>+91</COUNTRYISDCODE>
          <ISDEFAULTWHATSAPPNUM>Yes</ISDEFAULTWHATSAPPNUM>
        </CONTACTDETAILS.LIST>
        <GSTCLASSFNIGSTRATES.LIST>      </GSTCLASSFNIGSTRATES.LIST>
        <EXTARIFFDUTYHEADDETAILS.LIST>      </EXTARIFFDUTYHEADDETAILS.LIST>
        <TEMPGSTITEMSLABRATES.LIST>      </TEMPGSTITEMSLABRATES.LIST>
        <LEDGSTADDRESS.LIST>      </LEDGSTADDRESS.LIST>
        <VOUCHERTYPEPRODUCTCODES.LIST>      </VOUCHERTYPEPRODUCTCODES.LIST>
        <LEDADDRESS.LIST>      </LEDADDRESS.LIST>
        <DEFMULTIPLETOPHONENO.LIST>      </DEFMULTIPLETOPHONENO.LIST>
      </LEDGER>
    </TALLYMESSAGE>`;

  return xml;
}

/**
 * Generates a purchaser ledger XML envelope message for Tally.
 * @param name - The name to be used for the purchaser ledger.
 * @returns The XML string for the purchaser ledger.
 * @throws Error if no name is provided.
 */
export function createPurchaserLedgerXml(name: string): string {
  if (!name) {
    throw new Error("Purchase name is required.");
  }

  const xml = `<ENVELOPE>
  <HEADER>
    <TALLYREQUEST>Import Data</TALLYREQUEST>
  </HEADER>
  <BODY>
    <IMPORTDATA>
      <REQUESTDESC>
        <REPORTNAME>All Masters</REPORTNAME>
      </REQUESTDESC>
      <REQUESTDATA>
        <TALLYMESSAGE>
          <LEDGER NAME="${name}" Action="Create">
            <NAME>${name}</NAME>
            <PARENT>Purchase Accounts</PARENT>
            <APPROPRIATEFOR>GST</APPROPRIATEFOR>
            <GSTAPPROPRIATETO>Goods and Services</GSTAPPROPRIATETO>
          </LEDGER>
        </TALLYMESSAGE>
      </REQUESTDATA>
    </IMPORTDATA>
  </BODY>
</ENVELOPE>`;

  return xml;
}



/**
 * Interface defining the expected structure of a unit object.
 */
export interface Unit {
  name: string;
  decimal: number;
}

/**
 * Generates XML for multiple units.
 *
 * @param units - An array of unit objects.
 * @returns A string containing the combined XML for all the units.
 * @throws Error if the payload is not an array.
 */
export function createUnits(units: unknown): string {
  if (!Array.isArray(units)) {
    throw new Error("Payload must be an array of unit objects.");
  }

  let xmlOutput = "";
  // Base values for generating GUID suffix and ALTERID.
  const baseGUID = "bf911d27-633e-4ad7-ba7c-a871d6f9461e-";
  const startingSuffix = 263; // starting numerical value for the GUID suffix (example: 00000263)
  const baseAlterID = 1005; // starting alterID value

  // Loop over each unit in the payload to generate XML for each.
  (units as Unit[]).forEach((unit, index) => {
    const { name, decimal } = unit;

    // Basic check on individual properties.
    if (!name || typeof decimal === "undefined") {
      // Skip this entry. Alternatively, you could log or throw an error here.
      return;
    }

    // Generate a pseudo-unique GUID by appending an incremental suffix.
    const guidSuffix = (startingSuffix + index).toString().padStart(8, "0");
    const guid = baseGUID + guidSuffix;
    // Calculate the ALTERID based on the index.
    const alterID = baseAlterID + index;

    // Create the XML for this unit.
    const xmlUnit = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
      <UNIT NAME="${name}" RESERVEDNAME="">
        <NAME>${name}</NAME>
        <GUID>${guid}</GUID>
        <ISUPDATINGTARGETID>No</ISUPDATINGTARGETID>
        <ISDELETED>No</ISDELETED>
        <ISSECURITYONWHENENTERED>No</ISSECURITYONWHENENTERED>
        <ASORIGINAL>Yes</ASORIGINAL>
        <ISGSTEXCLUDED>No</ISGSTEXCLUDED>
        <ISSIMPLEUNIT>Yes</ISSIMPLEUNIT>
        <ALTERID>${alterID}</ALTERID>
        <DECIMALPLACES>${decimal}</DECIMALPLACES>
        <REPORTINGUQCDETAILS.LIST>
          <APPLICABLEFROM>20250401</APPLICABLEFROM>
          <REPORTINGUQCNAME>&#4; Not Applicable</REPORTINGUQCNAME>
        </REPORTINGUQCDETAILS.LIST>
      </UNIT>
    </TALLYMESSAGE>`;

    // Append the current unit XML to our output.
    xmlOutput += xmlUnit + "\n";
  });

  return xmlOutput;
}


/**
* Interface defining the structure of a stock item object.
*/
export interface StockItem {
  Product: string;
  HSN: string;
  SGST: number;
  CGST: number;
  gst: number;
  symbol: string;
}

/**
 * Generates XML for multiple stock items.
 *
 * @param items - An array of stock item objects.
 * @returns A string containing the combined XML for all stock items.
 * @throws Error if the payload is not an array.
 */
export function createStockItems(items: unknown): string {
  // Validate that the input is an array.
  if (!Array.isArray(items)) {
    throw new Error("Payload must be an array of stock item objects.");
  }

  let xmlOutput = "";
  const baseGUID = "bf911d27-633e-4ad7-ba7c-a871d6f9461e-";
  const startingSuffix = 269; // Starting suffix for GUID (example: "00000269")
  const baseAlterID = 1011;   // Starting alterID value

  (items as StockItem[]).forEach((item, index) => {
    const { Product, HSN, SGST, CGST, gst, symbol } = item;

    // Basic validation for required fields.
    if (
      !Product ||
      !HSN ||
      typeof SGST === "undefined" ||
      typeof CGST === "undefined" ||
      typeof gst === "undefined" ||
      !symbol
    ) {
      // Skip this entry. You can also choose to throw an error or log a warning.
      return;
    }

    // Generate a pseudo-unique GUID and ALTERID for each stock item.
    const guidSuffix = (startingSuffix + index).toString().padStart(8, "0");
    const guid = baseGUID + guidSuffix;
    const alterID = baseAlterID + index;

    // Build the XML for the current stock item.
    const xmlItem = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
      <STOCKITEM NAME="${Product}" RESERVEDNAME="">
        <OLDAUDITENTRYIDS.LIST TYPE="Number">
          <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
        </OLDAUDITENTRYIDS.LIST>
        <GUID>${guid}</GUID>
        <PARENT/>
        <CATEGORY>&#4; Not Applicable</CATEGORY>
        <GSTAPPLICABLE>&#4; Applicable</GSTAPPLICABLE>
        <TAXCLASSIFICATIONNAME>&#4; Not Applicable</TAXCLASSIFICATIONNAME>
        <GSTTYPEOFSUPPLY>Goods</GSTTYPEOFSUPPLY>
        <EXCISEAPPLICABILITY>&#4; Applicable</EXCISEAPPLICABILITY>
        <SALESTAXCESSAPPLICABLE/>
        <VATAPPLICABLE>&#4; Applicable</VATAPPLICABLE>
        <COSTINGMETHOD>Avg. Cost</COSTINGMETHOD>
        <VALUATIONMETHOD>Avg. Price</VALUATIONMETHOD>
        <BASEUNITS>${symbol}</BASEUNITS>
        <ADDITIONALUNITS>&#4; Not Applicable</ADDITIONALUNITS>
        <EXCISEITEMCLASSIFICATION>&#4; Not Applicable</EXCISEITEMCLASSIFICATION>
        <VATBASEUNIT>${symbol}</VATBASEUNIT>
        <ISCOSTCENTRESON>No</ISCOSTCENTRESON>
        <ISBATCHWISEON>No</ISBATCHWISEON>
        <ISPERISHABLEON>No</ISPERISHABLEON>
        <ISENTRYTAXAPPLICABLE>No</ISENTRYTAXAPPLICABLE>
        <ISCOSTTRACKINGON>No</ISCOSTTRACKINGON>
        <ISUPDATINGTARGETID>No</ISUPDATINGTARGETID>
        <ISDELETED>No</ISDELETED>
        <ISSECURITYONWHENENTERED>No</ISSECURITYONWHENENTERED>
        <ASORIGINAL>Yes</ASORIGINAL>
        <ISRATEINCLUSIVEVAT>No</ISRATEINCLUSIVEVAT>
        <IGNOREPHYSICALDIFFERENCE>No</IGNOREPHYSICALDIFFERENCE>
        <IGNORENEGATIVESTOCK>No</IGNORENEGATIVESTOCK>
        <TREATSALESASMANUFACTURED>No</TREATSALESASMANUFACTURED>
        <TREATPURCHASESASCONSUMED>No</TREATPURCHASESASCONSUMED>
        <TREATREJECTSASSCRAP>No</TREATREJECTSASSCRAP>
        <HASMFGDATE>No</HASMFGDATE>
        <ALLOWUSEOFEXPIREDITEMS>No</ALLOWUSEOFEXPIREDITEMS>
        <IGNOREBATCHES>No</IGNOREBATCHES>
        <IGNOREGODOWNS>No</IGNOREGODOWNS>
        <ADJDIFFINFIRSTSALELEDGER>No</ADJDIFFINFIRSTSALELEDGER>
        <ADJDIFFINFIRSTPURCLEDGER>No</ADJDIFFINFIRSTPURCLEDGER>
        <CALCONMRP>No</CALCONMRP>
        <EXCLUDEJRNLFORVALUATION>No</EXCLUDEJRNLFORVALUATION>
        <ISMRPINCLOFTAX>No</ISMRPINCLOFTAX>
        <ISADDLTAXEXEMPT>No</ISADDLTAXEXEMPT>
        <ISSUPPLEMENTRYDUTYON>No</ISSUPPLEMENTRYDUTYON>
        <GVATISEXCISEAPPL>No</GVATISEXCISEAPPL>
        <ISADDITIONALTAX>No</ISADDITIONALTAX>
        <ISCESSEXEMPTED>No</ISCESSEXEMPTED>
        <REORDERASHIGHER>No</REORDERASHIGHER>
        <MINORDERASHIGHER>No</MINORDERASHIGHER>
        <ISEXCISECALCULATEONMRP>No</ISEXCISECALCULATEONMRP>
        <INCLUSIVETAX>No</INCLUSIVETAX>
        <GSTCALCSLABONMRP>No</GSTCALCSLABONMRP>
        <MODIFYMRPRATE>No</MODIFYMRPRATE>
        <ALTERID>${alterID}</ALTERID>
        <DENOMINATOR>1</DENOMINATOR>
        <RATEOFVAT>0</RATEOFVAT>
        <VATBASENO>1</VATBASENO>
        <VATTRAILNO>1</VATTRAILNO>
        <VATACTUALRATIO>1</VATACTUALRATIO>
        <SERVICETAXDETAILS.LIST>      </SERVICETAXDETAILS.LIST>
        <VATDETAILS.LIST>      </VATDETAILS.LIST>
        <SALESTAXCESSDETAILS.LIST>      </SALESTAXCESSDETAILS.LIST>
        <GSTDETAILS.LIST>
          <APPLICABLEFROM>20250401</APPLICABLEFROM>
          <TAXABILITY>Taxable</TAXABILITY>
          <SRCOFGSTDETAILS>Specify Details Here</SRCOFGSTDETAILS>
          <GSTCALCSLABONMRP>No</GSTCALCSLABONMRP>
          <ISREVERSECHARGEAPPLICABLE>No</ISREVERSECHARGEAPPLICABLE>
          <ISNONGSTGOODS>No</ISNONGSTGOODS>
          <GSTINELIGIBLEITC>No</GSTINELIGIBLEITC>
          <INCLUDEEXPFORSLABCALC>No</INCLUDEEXPFORSLABCALC>
          <STATEWISEDETAILS.LIST>
            <STATENAME>&#4; Any</STATENAME>
            <RATEDETAILS.LIST>
              <GSTRATEDUTYHEAD>CGST</GSTRATEDUTYHEAD>
              <GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
              <GSTRATE>${CGST}</GSTRATE>
            </RATEDETAILS.LIST>
            <RATEDETAILS.LIST>
              <GSTRATEDUTYHEAD>SGST/UTGST</GSTRATEDUTYHEAD>
              <GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
              <GSTRATE>${SGST}</GSTRATE>
            </RATEDETAILS.LIST>
            <RATEDETAILS.LIST>
              <GSTRATEDUTYHEAD>IGST</GSTRATEDUTYHEAD>
              <GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
              <GSTRATE>${gst}</GSTRATE>
            </RATEDETAILS.LIST>
            <RATEDETAILS.LIST>
              <GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
              <GSTRATEVALUATIONTYPE>&#4; Not Applicable</GSTRATEVALUATIONTYPE>
            </RATEDETAILS.LIST>
            <RATEDETAILS.LIST>
              <GSTRATEDUTYHEAD>State Cess</GSTRATEDUTYHEAD>
              <GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
            </RATEDETAILS.LIST>
            <GSTSLABRATES.LIST>        </GSTSLABRATES.LIST>
          </STATEWISEDETAILS.LIST>
          <TEMPGSTITEMSLABRATES.LIST>       </TEMPGSTITEMSLABRATES.LIST>
          <TEMPGSTDETAILSLABRATES.LIST>       </TEMPGSTDETAILSLABRATES.LIST>
        </GSTDETAILS.LIST>
        <HSNDETAILS.LIST>
          <APPLICABLEFROM>20250401</APPLICABLEFROM>
          <HSNCODE>${HSN}</HSNCODE>
          <SRCOFHSNDETAILS>Specify Details Here</SRCOFHSNDETAILS>
        </HSNDETAILS.LIST>
        <LANGUAGENAME.LIST>
          <NAME.LIST TYPE="String">
            <NAME>${Product}</NAME>
          </NAME.LIST>
          <LANGUAGEID>1033</LANGUAGEID>
        </LANGUAGENAME.LIST>
        <SCHVIDETAILS.LIST>      </SCHVIDETAILS.LIST>
        <EXCISETARIFFDETAILS.LIST>      </EXCISETARIFFDETAILS.LIST>
        <TCSCATEGORYDETAILS.LIST>      </TCSCATEGORYDETAILS.LIST>
        <TDSCATEGORYDETAILS.LIST>      </TDSCATEGORYDETAILS.LIST>
        <EXCLUDEDTAXATIONS.LIST>      </EXCLUDEDTAXATIONS.LIST>
        <OLDAUDITENTRIES.LIST>      </OLDAUDITENTRIES.LIST>
        <ACCOUNTAUDITENTRIES.LIST>      </ACCOUNTAUDITENTRIES.LIST>
        <AUDITENTRIES.LIST>      </AUDITENTRIES.LIST>
        <OLDMRPDETAILS.LIST>      </OLDMRPDETAILS.LIST>
        <VATCLASSIFICATIONDETAILS.LIST>      </VATCLASSIFICATIONDETAILS.LIST>
        <MRPDETAILS.LIST>      </MRPDETAILS.LIST>
        <REPORTINGUOMDETAILS.LIST>      </REPORTINGUOMDETAILS.LIST>
        <COMPONENTLIST.LIST>      </COMPONENTLIST.LIST>
        <ADDITIONALLEDGERS.LIST>      </ADDITIONALLEDGERS.LIST>
        <SALESLIST.LIST>      </SALESLIST.LIST>
        <PURCHASELIST.LIST>      </PURCHASELIST.LIST>
        <FULLPRICELIST.LIST>      </FULLPRICELIST.LIST>
        <BATCHALLOCATIONS.LIST>      </BATCHALLOCATIONS.LIST>
        <TRADEREXCISEDUTIES.LIST>      </TRADEREXCISEDUTIES.LIST>
        <STANDARDCOSTLIST.LIST>      </STANDARDCOSTLIST.LIST>
        <STANDARDPRICELIST.LIST>      </STANDARDPRICELIST.LIST>
        <EXCISEITEMGODOWN.LIST>      </EXCISEITEMGODOWN.LIST>
        <MULTICOMPONENTLIST.LIST>      </MULTICOMPONENTLIST.LIST>
        <LBTDETAILS.LIST>      </LBTDETAILS.LIST>
        <PRICELEVELLIST.LIST>      </PRICELEVELLIST.LIST>
        <GSTCLASSFNIGSTRATES.LIST>      </GSTCLASSFNIGSTRATES.LIST>
        <EXTARIFFDUTYHEADDETAILS.LIST>      </EXTARIFFDUTYHEADDETAILS.LIST>
        <TEMPGSTITEMSLABRATES.LIST>      </TEMPGSTITEMSLABRATES.LIST>
      </STOCKITEM>
    </TALLYMESSAGE>`;

    xmlOutput += xmlItem + "\n";
  });

  return xmlOutput;
}


/**
 * Interface for a single sale item.
 */
export interface Item {
  name: string;
  price: number;
  quantity: number;
  unit: string;
}

/**
 * Interface for the Voucher API payload.
 */
export interface VoucherPayload {
  invoiceNumber: string;
  invoiceData: string; // dd-mm-yyyy
  partyName: string;
  purchaseLedger: string;
  items: Item[];
  sgst: string; // e.g., "10%"
  cgst: string; // e.g., "10%"
  igst: string; // e.g., "10%"
  isWithinState: boolean;
}

/**
 * Converts a date from dd-mm-yyyy to yyyyMMdd.
 * @param dateStr date string in dd-mm-yyyy format.
 * @returns a date string in yyyyMMdd format.
 */
function formatDate(dateStr: string): string {
  const [dd, mm, yyyy] = dateStr.split("-");
  return `${yyyy}${mm.padStart(2, "0")}${dd.padStart(2, "0")}`;
}

/**
 * Removes the "%" from a percentage string and returns a number.
 * @param percentStr e.g., "10%"
 * @returns the numeric percentage (e.g., 10)
 */
function parsePercentage(percentStr: string): number {
  return parseFloat(percentStr.replace("%", ""));
}

/**
 * Generates a Voucher XML string from the provided payload.
 *
 * If `isWithinState` is true then separate tax ledger entries for CGST and SGST
 * will be added; otherwise an IGST ledger entry will be generated.
 *
 * @param payload - The voucher payload data.
 * @returns The constructed voucher XML string.
 * @throws Error if required fields are missing.
 */
export function createVoucher(payload: VoucherPayload): string {
  const {
    invoiceNumber,
    invoiceData,
    partyName,
    purchaseLedger,
    items,
    sgst,
    cgst,
    igst,
    isWithinState,
  } = payload;

  // Basic validation.
  if (!invoiceNumber || !invoiceData || !partyName || !purchaseLedger || !items) {
    throw new Error("Missing required fields in voucher payload.");
  }

  // Format the invoice date.
  const formattedDate = formatDate(invoiceData);

  // Generate a pseudo-unique voucher GUID (for demonstration, you may use a proper generator in production).
  const voucherGUID = `bf911d27-633e-4ad7-ba7c-a871d6f9461e-${Math.floor(Math.random() * 1000000)
    .toString()
    .padStart(8, "0")}`;

  // Compute the total value of all items.
  const totalAmount = items.reduce((sum, item) => sum + item.price * item.quantity, 0);

  // Compute applicable tax amounts.
  let cgstAmount = 0, sgstAmount = 0, igstAmount = 0;
  if (isWithinState) {
    const cgstRate = parsePercentage(cgst) / 100;
    const sgstRate = parsePercentage(sgst) / 100;
    cgstAmount = totalAmount * cgstRate;
    sgstAmount = totalAmount * sgstRate;
  } else {
    const igstRate = parsePercentage(igst) / 100;
    igstAmount = totalAmount * igstRate;
  }

  // Build the ALLINVENTORYENTRIES.LIST section using a loop over items.
  const inventoryEntriesXml = items
    .map((item) => {
      const itemTotal = item.price * item.quantity;
      return `<ALLINVENTORYENTRIES.LIST>
    <STOCKITEMNAME>${item.name}</STOCKITEMNAME>
    <RATE>${item.price}</RATE>
    <AMOUNT>${itemTotal.toFixed(2)}</AMOUNT>
    <BILLEDQTY>${item.quantity} ${item.unit}</BILLEDQTY>
  </ALLINVENTORYENTRIES.LIST>`;
    })
    .join("\n");

  // Build dynamic tax ledger entries based on the passed values.
  let taxLedgerEntriesXml = "";
  if (isWithinState) {
    // Construct dynamic names for CGST and SGST.
    // For SGST, if an "isUt" flag is provided, you could use "Ut/Sgst" instead.
    const dynamicCgstName = `Cgst${cgst}`;
    const dynamicSgstName = `Ut/Sgst${sgst}`

    taxLedgerEntriesXml += `<LEDGERENTRIES.LIST>
    <LEDGERNAME>${dynamicCgstName}</LEDGERNAME>
    <AMOUNT>${(-cgstAmount).toFixed(2)}</AMOUNT>
  </LEDGERENTRIES.LIST>
  <LEDGERENTRIES.LIST>
    <LEDGERNAME>${dynamicSgstName}</LEDGERNAME>
    <AMOUNT>${(-sgstAmount).toFixed(2)}</AMOUNT>
  </LEDGERENTRIES.LIST>`;
  } else {
    // Dynamic IGST ledger entry.
    const dynamicIgstName = `Igst${igst}`;
    taxLedgerEntriesXml += `<LEDGERENTRIES.LIST>
    <LEDGERNAME>${dynamicIgstName}</LEDGERNAME>
    <AMOUNT>${(-igstAmount).toFixed(2)}</AMOUNT>
  </LEDGERENTRIES.LIST>`;
  }

  // Create the purchase ledger entry.
  const purchaseLedgerEntryXml = `<LEDGERENTRIES.LIST>
    <LEDGERNAME>${purchaseLedger}</LEDGERNAME>
    <AMOUNT>${totalAmount.toFixed(2)}</AMOUNT>
  </LEDGERENTRIES.LIST>`;

  // Assemble the full voucher XML.
  const xml = `<TALLYMESSAGE xmlns:UDF="TallyUDF">
    <VOUCHER REMOTEID="${voucherGUID}" VCHTYPE="Purchase" ACTION="Create" OBJVIEW="Invoice Voucher View">
      <OLDAUDITENTRYIDS.LIST TYPE="Number">
        <OLDAUDITENTRYIDS>-1</OLDAUDITENTRYIDS>
      </OLDAUDITENTRYIDS.LIST>
      <DATE>${formattedDate}</DATE>
      <REFERENCEDATE>${formattedDate}</REFERENCEDATE>
      <VCHSTATUSDATE>${formattedDate}</VCHSTATUSDATE>
      <GUID>${voucherGUID}</GUID>
      <PARTYNAME>${partyName}</PARTYNAME>
      <VOUCHERNUMBER>${invoiceNumber}</VOUCHERNUMBER>
      <REFERENCE>${invoiceNumber}</REFERENCE>
      <PARTYLEDGERNAME>${partyName}</PARTYLEDGERNAME>
      <VOUCHERTYPENAME>Purchase</VOUCHERTYPENAME>
      ${inventoryEntriesXml}
     ${purchaseLedgerEntryXml}
     ${taxLedgerEntriesXml}
    </VOUCHER>
  </TALLYMESSAGE>`;

  return xml;
}

// ----------------------------------------------------------------------------


import { parseStringPromise } from 'xml2js';

/**
 * Extracts LEDGER names from a Tally XML string.
 *
 * @param xmlData - The XML string to parse.
 * @returns A promise that resolves to an array of LEDGER names.
 */
export const getLedgerNames = async (xmlData: string): Promise<string[]> => {
  try {
    // Parse the XML with explicitArray: false so that single elements are not wrapped in an array.
    const result = await parseStringPromise(xmlData, { explicitArray: false });

    // Navigate to the LEDGER elements:
    // Expected path: ENVELOPE -> BODY -> DATA -> COLLECTION -> LEDGER
    const collection = result?.ENVELOPE?.BODY?.DATA?.COLLECTION;
    if (!collection) {
      throw new Error("Cannot find COLLECTION element in the XML.");
    }

    // The LEDGER elements might either be an array or a single object
    const ledgers = collection.LEDGER;
    let ledgerNames: string[] = [];

    if (Array.isArray(ledgers)) {
      ledgerNames = ledgers.map((ledger: any) => ledger.$.NAME);
    } else if (ledgers && ledgers.$) {
      ledgerNames.push(ledgers.$.NAME);
    }

    return ledgerNames;
  } catch (error) {
    console.error("Error parsing XML to get ledger names:", error);
    throw error;
  }
}
